<?php
// Copyright (C) 2008 - 2012 vortexbox.org
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
require '/var/www/html/libs/Smarty.class.php';

$smarty = new Smarty;
$smarty->caching = 0;

$smarty->compile_check = true;
$smarty->debugging = false;

require '/var/www/html/libs/vortexbox_defs.php';
require '/var/www/html/libs/vortexbox_smarty.php';

$_action = isset($_REQUEST['action']) ? $_REQUEST['action'] : 'default';

if (file_exists($lamopt)) {
	$lamoptraw = file($lamopt);
	$MP3QUALITY = trim($lamoptraw[0]);
} else {
	$MP3QUALITY = "-V2";
	if ($fp = fopen($lamopt, 'w')) {
		fwrite($fp, $MP3QUALITY);
		fclose($fp);
	} else {
		echo 'Config file unwritable... '; 
	}	
}

if (file_exists($lamopt)) {
	$lamoptraw = file($lamopt);
	$MP3QUALITY = trim($lamoptraw[0]);
} else {
	$MP3QUALITY = "-V2";
	if ($fp = fopen($lamopt, 'w')) {
		fwrite($fp, $MP3QUALITY);
		fclose($fp);
	} else {
		echo 'Config file unwritable... '; 
	}	
}

switch($_action) {
	case 'StartMirror':
		exec("sudo /opt/vortexbox/doaction.sh StartMirror & >/dev/null 2>&1");
        break;

	case 'StopMirror':
		exec("sudo /opt/vortexbox/doaction.sh StopMirror & >/dev/null 2>&1");
        break;

	case 'DelMirror':
		exec("sudo /opt/vortexbox/doaction.sh DelMirror & >/dev/null 2>&1");
        break;

	case 'ClearMirrorLog':
		exec("sudo /opt/vortexbox/doaction.sh ClearMirrorLog & >/dev/null 2>&1");
        break;
	
	case 'StartMP4Mirror':
		exec("sudo /opt/vortexbox/doaction.sh StartMP4Mirror & >/dev/null 2>&1");
        break;
  case 'StartOGGMirror':
		exec("sudo /opt/vortexbox/doaction.sh StartOGGMirror & >/dev/null 2>&1");
        break;
		
	case 'submit':
	if (isset($_REQUEST['AUTOMP3'][0]) & !$_REQUEST['AUTOMP3'][0] =="") {
		exec("touch /etc/vortexbox/automp3");
	} else {
		exec("rm /etc/vortexbox/automp3");
	}
	
	if (isset($_REQUEST['AUTOAAC'][0]) & !$_REQUEST['AUTOAAC'][0] =="") {
		exec("touch /etc/vortexbox/autoaac");
	} else {
		exec("rm /etc/vortexbox/autoaac");
	}

  if (isset($_REQUEST['AUTOOGG'][0]) & !$_REQUEST['AUTOOGG'][0] =="") {
		exec("touch /etc/vortexbox/autoogg");
	} else {
		exec("rm /etc/vortexbox/autoogg");
	}
	
	if (isset($_REQUEST['COVERMP3'][0]) & !$_REQUEST['COVERMP3'][0] =="") {
		exec("touch /etc/vortexbox/covermp3");
	} else {
		exec("rm /etc/vortexbox/covermp3");
	}
	
	if (isset($_REQUEST['MP3QUALITY']) & !$_REQUEST['MP3QUALITY'] =="") { $MP3QUALITY = $_REQUEST['MP3QUALITY']; }
	if ($fp = fopen($lamopt, 'w')) {
		fwrite($fp, $MP3QUALITY);
		fclose($fp);
	} else {
		echo 'Config file unwritable... '; 
	}	

  if (isset($_REQUEST['OGGQUALITY']) & !$_REQUEST['OGGQUALITY'] =="") { $OGGQUALITY = $_REQUEST['OGGQUALITY']; }
	if ($fp = fopen($libvorbis, 'w')) {
		fwrite($fp, $OGGQUALITY);
		fclose($fp);
	} else {
		echo 'Config file unwritable... '; 
	}	

    default:
        break;   
}

//mp3
$smarty->assign('automp3_checkbox', array(
					'automp3' => '&nbsp;Enable automatic mp3 mirroring',
                     ));
if (file_exists("/etc/vortexbox/automp3")) {
    $smarty->assign('automp3_ischecked', "automp3");
} else {
   $smarty->assign('automp3_ischecked', "no");
}
//ogg
$smarty->assign('autoogg_checkbox', array(
					'autoogg' => '&nbsp;Enable automatic ogg mirroring',
                     ));

if (file_exists("/etc/vortexbox/automp3")) {
    $smarty->assign('autoogg_ischecked', "autoogg");
} else {
   $smarty->assign('autoogg_ischecked', "no");
}
//alac
$smarty->assign('autoaac_checkbox', array(
					'autoaac' => '&nbsp;Enable automatic ALAC mirroring',
                     ));

if (file_exists("/etc/vortexbox/autoaac")) {
    $smarty->assign('autoaac_ischecked', "autoaac");
} else {
   $smarty->assign('autoaac_ischecked', "no");
}

$smarty->assign('covermp3_checkbox', array(
					'covermp3' => '&nbsp;Enable mp3 embedded cover art',
                     ));

if (file_exists("/etc/vortexbox/covermp3")) {
    $smarty->assign('covermp3_ischecked', "covermp3");
} else {
   $smarty->assign('covermp3_ischecked', "no");
}


$smarty->assign('CURRENTTMP3QUALITY', $MP3QUALITY);

$smarty->assign('mp3qualitylist', array(
'-b320' => 'Insane (320Kbit/s CBR)',
'-V0' => 'Extreme (245Kbit/s VBR)',
'-V2' => 'Standard (190Kbit/s VBR)',
'-V4' => 'Medium (160Kbit/s VBR)'
));

$smarty->assign('CURRENTTOGGQUALITY', $OGGQUALITY);

$smarty->assign('oggqualitylist', array(
'-b320' => 'Insane (320Kbit/s CBR)',
'-V0' => 'Extreme (245Kbit/s VBR)',
'-V2' => 'Standard (190Kbit/s VBR)',
'-V4' => 'Medium (160Kbit/s VBR)'
));

$smarty->display('flacmirror.tpl');

?>
